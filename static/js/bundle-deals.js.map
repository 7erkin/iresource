{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./frontend/js/deals/app.js","webpack:///./frontend/js/deals/controller.js","webpack:///./frontend/js/deals/index.js","webpack:///./frontend/js/deals/model.js","webpack:///./frontend/js/deals/strategy/filter-factory.js","webpack:///./frontend/js/deals/strategy/filter.js","webpack:///./frontend/js/deals/strategy/search.js","webpack:///./frontend/js/deals/strategy/sort-factory.js","webpack:///./frontend/js/deals/strategy/sort.js","webpack:///./frontend/js/deals/view-library.js","webpack:///./frontend/js/deals/view.js","webpack:///./frontend/js/deals/wait-screen-saver.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACF;AACY;AACY;AAC/C;AACP;AACA,oCAAoC,kEAAe;AACnD;AACA,0BAA0B,4CAAK;AAC/B,+BAA+B,sDAAU;AACzC;AACA,yBAAyB,0CAAI;AAC7B;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACJ;AACN;AACjD;AACP;AACA;AACA,iCAAiC,8EAAqB;AACtD,+BAA+B,0EAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oEAAmB;AACxD;AACA;AACA;AACA,iCAAiC;AACjC;;;;;;;;;;;;;AC5BA;AAAA;AAA2C;AAC3C,gBAAgB,gDAAG;AACnB;;;;;;;;;;;;;ACFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvIA;AAAA;AAAA;AAAoE;AAC7D;AACP;AACA;AACA;AACA,+BAA+B,2DAAmB;AAClD,iBAAiB;AACjB;AACA,+BAA+B,2DAAmB;AAClD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAuC;AACE;AACD;AACjC;AACP;AACA;AACA,8CAA8C,mDAAa;AAC3D,gDAAgD,qDAAe;AAC/D,2CAA2C,oDAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,QAAQ;AACrE;AACA,KAAK;AACL;AACA;;AAEO;;AAEA;;AAEA;;AAEA;AACP;AACA;AACA;AACA;;AAEO,sF;;;;;;;;;;;;AChCP;AAAA;AAAA;AAAA;AAAkK;AAC5G;AAC/C;AACP;AACA;AACA;AACA,mCAAmC,kEAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAW;AACnB;AACA,QAAQ,iEAAW;AACnB;AACA;AACA,iCAAiC,yEAAmB;AACpD,mCAAmC,2EAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2EAAqB;AACrC;AACA,YAAY,wEAAkB;AAC9B,YAAY,qEAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2EAAqB;AACrC;AACA,YAAY,wEAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle-deals.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./frontend/js/deals/index.js\");\n","import { Model } from \"./model\";\r\nimport { View } from \"./view\";\r\nimport { Controller } from \"./controller\";\r\nimport { WaitScreenSaver } from \"./wait-screen-saver\";\r\nexport class Application {\r\n    init() {\r\n        const waitScreenSaver = new WaitScreenSaver();\r\n        waitScreenSaver.set();\r\n        const model = new Model();\r\n        const controller = new Controller(model);\r\n        waitScreenSaver.remove();\r\n        const view = new View(controller, model);\r\n        view.initUpdate();\r\n    }\r\n}\r\n","import { FilterStrategyFactory } from \"./strategy/filter-factory\";\r\nimport { SortStrategyFactory } from \"./strategy/sort-factory\";\r\nimport { SearchByCompanyName } from \"./strategy/search\";\r\nexport class Controller {\r\n    constructor(model) {\r\n        this.model = model;\r\n        this.filterFactory = new FilterStrategyFactory();\r\n        this.sortFactory = new SortStrategyFactory();\r\n    }\r\n    onFilterButtonClicked(clickedButtonClasses) {\r\n        const strategyInstance = this.filterFactory.createStrategy(clickedButtonClasses);\r\n        this.model.setFilterStrategy(strategyInstance);\r\n        this.model.filter();\r\n    }\r\n    onSortButtonClicked(clickedButtonClasses) {\r\n        const strategyInstance = this.sortFactory.createStrategy(clickedButtonClasses);\r\n        this.model.setSortStrategy(strategyInstance);\r\n        this.model.sort();\r\n    }\r\n    onSearchButtonClicked(clickedButtonClasses, inputValue) {\r\n        if (inputValue === '') {\r\n            return;\r\n        }\r\n        const strategyInstance = new SearchByCompanyName(inputValue);\r\n        this.model.setSearchStrategy(strategyInstance);\r\n        this.model.search();\r\n    }\r\n    onPaginationButtonClicked() { }\r\n}\r\n","import { Application as App } from \"./app\";\r\nconst app = new App();\r\napp.init();\r\n","export class Model {\r\n    constructor() {\r\n        this.originalDeals = this.loadDeals();\r\n        this.subscribers = new Set();\r\n    }\r\n    addSubscriber(subscriber) {\r\n        this.subscribers.add(subscriber);\r\n    }\r\n    removeSubscriber(subscriber) {\r\n        this.subscribers.delete(subscriber);\r\n    }\r\n    notifyAll() {\r\n        for (const subscriber of this.subscribers)\r\n            subscriber.update();\r\n    }\r\n    getData() {\r\n        return this.transformDeals;\r\n    }\r\n    setSortStrategy(sortStrategy) {\r\n        this.sortStrategy = sortStrategy;\r\n    }\r\n    setFilterStrategy(filterStrategy) {\r\n        this.filterStrategy = filterStrategy;\r\n    }\r\n    setSearchStrategy(searchStrategy) {\r\n        this.searchStrategy = searchStrategy;\r\n    }\r\n    sort() {\r\n        this.sortStrategy.sort(this.transformDeals);\r\n        this.notifyAll();\r\n    }\r\n    filter() {\r\n        this.transformDeals = this.filterStrategy.filter(this.originalDeals);\r\n        this.notifyAll();\r\n    }\r\n    search() {\r\n        const deals = this.searchStrategy.search(this.originalDeals);\r\n        this.transformDeals = this.filterStrategy.filter(deals);\r\n        this.sortStrategy.sort(this.transformDeals);\r\n        this.notifyAll();\r\n    }\r\n    loadDeals() {\r\n        return [\r\n            {\r\n                name: \"Polys Gold\",\r\n                dateOpen: 12345,\r\n                dateClosed: 0,\r\n                like: 10,\r\n                comment: 10,\r\n                watcher: 10000,\r\n                image: 'https://vanin-invest.com/wp-content/uploads/2016/09/Polyus.jpg'\r\n            },\r\n            {\r\n                name: \"Aeroflot\",\r\n                dateOpen: 12345,\r\n                dateClosed: 0,\r\n                like: 100,\r\n                comment: 30,\r\n                watcher: 10000,\r\n                image: 'https://regnum.ru/uploads/pictures/news/2017/10/11/regnum_picture_15077158461288890_big.jpg'\r\n            },\r\n            {\r\n                name: \"Phosagro\",\r\n                dateOpen: 12345,\r\n                dateClosed: 12345,\r\n                like: 260,\r\n                comment: 120,\r\n                watcher: 10000,\r\n                image: 'http://toplogos.ru/images/logo-phosagro.png'\r\n            },\r\n            {\r\n                name: \"Mechel\",\r\n                dateOpen: 12345,\r\n                dateClosed: 0,\r\n                like: 30,\r\n                comment: 210,\r\n                watcher: 10000,\r\n                image: 'http://cdn.forbes.ru/files/presets/900_566/profile/magnit3.jpg__1506495387__73040__vid422245e.jpg'\r\n            },\r\n            {\r\n                name: \"Apple\",\r\n                dateOpen: 12345,\r\n                dateClosed: 0,\r\n                like: 20,\r\n                comment: 10,\r\n                watcher: 10000,\r\n                image: 'https://www.apple.com/ac/ac-video-posterframe/1.0/images/ac-video-poster_848x480_2x.jpg'\r\n            },\r\n            {\r\n                name: \"Polys Gold\",\r\n                dateOpen: 12345,\r\n                dateClosed: 12345,\r\n                like: 10,\r\n                comment: 10,\r\n                watcher: 10000,\r\n                image: 'https://vanin-invest.com/wp-content/uploads/2016/09/Polyus.jpg'\r\n            },\r\n            {\r\n                name: \"Aeroflot\",\r\n                dateOpen: 12345,\r\n                dateClosed: 0,\r\n                like: 100,\r\n                comment: 30,\r\n                watcher: 10000,\r\n                image: 'https://regnum.ru/uploads/pictures/news/2017/10/11/regnum_picture_15077158461288890_big.jpg'\r\n            },\r\n            {\r\n                name: \"Phosagro\",\r\n                dateOpen: 12345,\r\n                dateClosed: 12345,\r\n                like: 260,\r\n                comment: 120,\r\n                watcher: 10000,\r\n                image: 'http://toplogos.ru/images/logo-phosagro.png'\r\n            },\r\n            {\r\n                name: \"Mechel\",\r\n                dateOpen: 12345,\r\n                dateClosed: 12345,\r\n                like: 30,\r\n                comment: 210,\r\n                watcher: 10000,\r\n                image: 'http://cdn.forbes.ru/files/presets/900_566/profile/magnit3.jpg__1506495387__73040__vid422245e.jpg'\r\n            },\r\n            {\r\n                name: \"Apple\",\r\n                dateOpen: 12345,\r\n                dateClosed: 12345,\r\n                like: 20,\r\n                comment: 10,\r\n                watcher: 10000,\r\n                image: 'https://www.apple.com/ac/ac-video-posterframe/1.0/images/ac-video-poster_848x480_2x.jpg'\r\n            }\r\n        ];\r\n    }\r\n}\r\n","import { FilterByActiveDeals, FilterByClosedDeals } from './filter';\r\nexport class FilterStrategyFactory {\r\n    constructor() {\r\n        this.buttonClassToFilterInterface = new Map([\r\n            ['button-active-deals', () => {\r\n                    return new FilterByActiveDeals();\r\n                }],\r\n            ['button-closed-deals', () => {\r\n                    return new FilterByClosedDeals();\r\n                }]\r\n        ]);\r\n    }\r\n    createStrategy(buttonClasses) {\r\n        for (let key of this.buttonClassToFilterInterface)\r\n            if (buttonClasses.indexOf(key[0]) !== -1)\r\n                return this.buttonClassToFilterInterface.get(key[0])();\r\n    }\r\n}\r\n","export class FilterByActiveDeals {\r\n    filter(deals) {\r\n        return deals.filter(deal => deal.dateClosed === 0);\r\n    }\r\n}\r\nexport class FilterByClosedDeals {\r\n    filter(deals) {\r\n        return deals.filter(deal => deal.dateClosed !== 0);\r\n    }\r\n}\r\n","export class SearchByCompanyName {\r\n    constructor(companyName) {\r\n        this.companyName = companyName;\r\n    }\r\n    search(deals) {\r\n        return deals.filter(deal => deal.name.toUpperCase() == this.companyName.toUpperCase());\r\n    }\r\n}\r\n","import { SortByPopular } from \"./sort\";\r\nimport { SortByDiscussed } from \"./sort\";\r\nimport { SortByOpenDate } from \"./sort\";\r\nexport class SortStrategyFactory {\r\n    constructor() {\r\n        this.buttonClassToSortStrategy = new Map([\r\n            ['button-most-popular', () => new SortByPopular()],\r\n            ['button-most-discussed', () => new SortByDiscussed()],\r\n            ['button-open-date', () => new SortByOpenDate()]\r\n        ]);\r\n    }\r\n    createStrategy(buttonClasses) {\r\n        for (let key of this.buttonClassToSortStrategy)\r\n            if (buttonClasses.indexOf(key[0]) !== -1)\r\n                return this.buttonClassToSortStrategy.get(key[0])();\r\n    }\r\n}\r\n","export class SortByPopular {\r\n    sort(deals) {\r\n        return deals.sort((deal1, deal2) => -deal1.like + deal2.like);\r\n    }\r\n}\r\nexport class SortByDiscussed {\r\n    sort(deals) {\r\n        return deals.sort((deal1, deal2) => -deal1.comment + deal2.comment);\r\n    }\r\n}\r\nexport class SortByOpenDate {\r\n    sort(deals) {\r\n        return deals.sort((deal1, deal2) => -deal1.dateOpen + deal2.dateOpen);\r\n    }\r\n}\r\n","export const removeDeals = () => document.querySelector('.deal-list').innerHTML = '';\r\n\r\nexport const renderDeals = deals => {\r\n    const templateElement = document.getElementById('template');\r\n    const templateDealNode = templateElement.content.querySelector('.deal-item');\r\n    const fragment = document.createDocumentFragment();\r\n    deals.forEach(deal => {\r\n        let dealNode = templateDealNode.cloneNode(true);\r\n        dealNode.querySelector('.deal-item-name').innerText = deal.name;\r\n        dealNode.querySelector('img').src = deal.image;\r\n        dealNode.querySelector('.likes').innerText = deal.like;\r\n        dealNode.querySelector('.comments').innerText = deal.comment;\r\n        dealNode.querySelector('.date-open').innerText = deal.dateOpen;\r\n        dealNode.querySelector('.watchers').innerText = deal.watcher;\r\n        dealNode.querySelector('.read-deal').href = `/post/${deal.id}`;\r\n        fragment.appendChild(dealNode);\r\n    });\r\n    document.querySelector('.deal-list').appendChild(fragment);\r\n};\r\n\r\nexport const getActiveSortButton = () => document.querySelector('#sort .button-active');\r\n\r\nexport const getActiveFilterButton = () => document.querySelector('#filter .button-active');\r\n\r\nexport const isActiveFilterChoosen = node => Array.from(node.classList).indexOf('button-active') === 0;\r\n\r\nexport const updateActiveButton = (parentCssSelector, node) => {\r\n    const activeButtonNode = document.querySelector(parentCssSelector + ' .' + 'button-active');\r\n    activeButtonNode.classList.remove('button-active');\r\n    node.classList.add('button-active');\r\n};\r\n\r\nexport const clearSearchForm = () => document.querySelector('.form-search input').value = '';","import { removeDeals, renderDeals, getActiveSortButton, getActiveFilterButton, isActiveFilterChoosen, updateActiveButton, clearSearchForm } from \"./view-library\";\r\nimport { WaitScreenSaver } from \"./wait-screen-saver\";\r\nexport class View {\r\n    constructor(controller, model) {\r\n        this.controller = controller;\r\n        this.model = model;\r\n        this.waitScreenSaver = new WaitScreenSaver();\r\n        this.model.addSubscriber(this);\r\n        this.addListenerToFilter();\r\n        this.addListenerToSort();\r\n        this.addListenerToSearch();\r\n    }\r\n    update() {\r\n        removeDeals();\r\n        const deals = this.model.getData();\r\n        renderDeals(deals);\r\n    }\r\n    initUpdate() {\r\n        const activeSortButton = getActiveSortButton();\r\n        const activeFilterButton = getActiveFilterButton();\r\n        const sortButtonClasses = Array.from(activeSortButton.classList);\r\n        const filterButtonClasses = Array.from(activeFilterButton.classList);\r\n        this.waitTill([\r\n            {\r\n                activity: this.controller.onFilterButtonClicked.bind(this.controller),\r\n                args: [filterButtonClasses]\r\n            },\r\n            {\r\n                activity: this.controller.onSortButtonClicked.bind(this.controller),\r\n                args: [sortButtonClasses]\r\n            }\r\n        ]);\r\n    }\r\n    addListenerToFilter() {\r\n        document\r\n            .getElementById('filter')\r\n            .addEventListener('click', (evt) => {\r\n            if ((evt.target).tagName.toLowerCase() !== 'button')\r\n                return;\r\n            if (isActiveFilterChoosen(evt.target))\r\n                return;\r\n            updateActiveButton('#filter', evt.target);\r\n            clearSearchForm();\r\n            const buttonClasses = Array.from((evt.target).classList);\r\n            this.waitTill([\r\n                {\r\n                    activity: this.controller.onFilterButtonClicked.bind(this.controller),\r\n                    args: [buttonClasses]\r\n                }\r\n            ]);\r\n        });\r\n    }\r\n    addListenerToSort() {\r\n        document\r\n            .getElementById('sort')\r\n            .addEventListener('click', (evt) => {\r\n            if ((evt.target).tagName.toLowerCase() !== 'button')\r\n                return;\r\n            if (isActiveFilterChoosen(evt.target))\r\n                return;\r\n            updateActiveButton('#sort', evt.target);\r\n            const buttonClasses = Array.from((evt.target).classList);\r\n            this.waitTill([\r\n                {\r\n                    activity: this.controller.onSortButtonClicked.bind(this.controller),\r\n                    args: [buttonClasses]\r\n                }\r\n            ]);\r\n        });\r\n    }\r\n    addListenerToSearch() {\r\n        document\r\n            .querySelector('.form-search')\r\n            .addEventListener('submit', evt => {\r\n            evt.preventDefault();\r\n            const inputValue = document.querySelector('.form-search input[type=\"search\"]').value;\r\n            this.waitTill([\r\n                {\r\n                    activity: this.controller.onSearchButtonClicked.bind(this.controller),\r\n                    args: [\r\n                        ['button-search'],\r\n                        inputValue\r\n                    ]\r\n                }\r\n            ]);\r\n        });\r\n    }\r\n    waitTill(actions) {\r\n        this.setWaitScreenSaver();\r\n        actions.forEach(action => action.activity(...action.args));\r\n        this.removeWaitScreenSaver();\r\n    }\r\n    setWaitScreenSaver() {\r\n        this.waitScreenSaver.set();\r\n    }\r\n    removeWaitScreenSaver() {\r\n        this.waitScreenSaver.remove();\r\n    }\r\n}\r\n","const template = document.querySelector('#template');\r\nconst waitNode = template.content.querySelector('#wait-element');\r\nconst dealList = document.querySelector('.deal-list');\r\nexport class WaitScreenSaver {\r\n    set() {\r\n        const node = waitNode.cloneNode(true);\r\n        dealList.appendChild(node);\r\n    }\r\n    remove() {\r\n        const node = document.querySelector('#wait-element');\r\n        if (node == undefined)\r\n            return;\r\n        node.remove();\r\n    }\r\n}\r\n"],"sourceRoot":""}